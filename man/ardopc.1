.TH ARDOPC 1 "March 2022"

.SH NAME
ardopc \- Software ARDOP modem/TNC

.SH SYNOPSIS
.B ardopc
.RI [ PORT ]
.RI [ ALSA-DEVICE Capture ]
.RI [ ALSA-DEVICE Playback ]
.RI [ OPTIONS ]

.SH DESCRIPTION
.B ardopc
is a Software ARDOP modem/TNC.
.P
It supports two host interfaces, TCP (using two TCP ports) or Serial using a Virtual COM port to link to the host.
The serial interface can emulate an SCS Dragon controller, allowing programs that don't support ardop but support the Dragon (such as Winlink Express or Airmail) to use ardop.
.P
If run without any parameters it listens on TCP port 8515 and uses the virtual sound device ARDOP.
You can specify command line parameters port capture device playback device.
.P
On Linux not many soundcards support the required sampling rate of 12000 samples/sec.
See paragraph below on rate conversion if your card doesn't.
.P
The TNC supports a number of options for PTT. When using the TCP interface it will send commands to the host to allow it to contol PTT.
This is most useful when the host program is running more than one sound card mode (eg ARDOP and WINMOR). The TNC can also key the radio via a hardware or software (CAT) interface. There are a number of optional command line parameters to control this
.P
Hardware control is normally via the RTS line on a COM port (possibly a Virtual COM Port, eg with the IC7300). On a Raspberry PI a GPIO pin can also be used.
.br
For example:
.br
.RS
-c COM10
.br
-c /dev/ttyUSB0
.br
-c GPIO (Using default pin 17)
.br
-c GPIO=n (Using a different pin).
.RE

.P
CAT and RTS PTT can share the same com port, so for radios like the IC7300 which support keying via RTS on the virtual com port you could have the application controlling frequency and the TNC controlling PTT.
Apart from the command line params above there is no configuration. All parameters are set by the application, though there are reasonable defaults for most of them.
.P
The program writes a debug log as well as debugging information to the program console.
.P
To simplify setting the audio input the program displays the peak input level every 10 seconds.
The program works with signed 16 bit samples, so the values will be in the range -32768 to 32767.
Clipping will cause distortion, so it is import to keep away from the limits.
I've found in practice that it will work down to quite low levels, but try to keep in the range +-20000.

.SH OPTIONS

.TP
.B -l --log-dir \fIPATH\fR
Path for Logfiles

.TP
.B -c --cat \fIDEVICE[:SPEED]\fR
Device to use for CAT control.
.br
For Example /dev/tty0:19200 or /dev/ttyUSB0
.br
Some host programs (such as BPQ32/LinBPQ and Winlink Express) can send radio control commands for frequency and mode setting over this port, but for reasons of latency the PTT commands have to be generated by the TNC.
Some host programs (such as BPQ32/LinBPQ) can set these commands over the ardop control interface, but for others the -k and -u commands are used.

.TP
.B -p --ptt \fIDEVICE\fR
Device to use for PTT (Push to Talk) control using RTS

.TP
.B -k --keystring \fISTRING\fR
String (In HEX) to send to the radio to key PTT

.TP
.B -u --unkeystring \fISTRING\fR
String (In HEX) to send to the radio to unkey PTT

.TP
.B -L
use left Channel of Soundcard in stereo mode

.TP
.B -R
use right Channel of Soundcard in stereo mode

.TP
.B -g
GPIO Pin for PTT.

.TP
.B -h --help
shows help and exits

." .SH EXIT STATUS

.SH SAMPLING RATE CONVERSION
ARDOP uses a sampling rate of 12000 samples/second, and not all that many Linux sound cards support this directly.
So if you are using Linux you will probably have to enable sample rate conversion.
This is achieved by adding the following to the alsa configuration.
I suggest you add it to the user configuration file .asoundrc, creating the file if it doesn't already exist.
The file should be in the user's home directory.
Note there is a dot on the front of the name, which isn't obvious with some fonts.
.P
.RS
pcm.ARDOP {type rate slave {pcm "hw:1,0" rate 48000}}
.RE
.P
This creates a virtual rate conversion device called ARDOP, using the real device hw:1,0, and running the real device at 48000.
If the sound card you are using isn't hw:1,0, then change the line to match your device.
.P
You can also enable sample rate converison using the ALSA "plug" device, eg plughw:1,0, but as this doesn't allow you to specify the real sampling rate I prefer using the virtual device.

.SH EXAMPLES
.TP
Use TCP port 8516:
ardopc 8516 ARDOP

.SH AUTHOR
Originally written by John Wiseman G8BPQ
.br
Written by Gerald Zehetner OE5GZE

." .SH HISTORY

.SH COPYRIGHT NOTICE
Copyright \(co 2001 John Wiseman G8BPQ
.br
Copyright \(co 2022 Gerald Zehetner OE5GZE
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.ig
Permission is granted to process this file through troff and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).
..
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Free Software Foundation.
